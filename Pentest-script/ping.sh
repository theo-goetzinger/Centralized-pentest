#!/bin/bash
echo "Saisir une IP :"        
read IP								# Récupérer la variable IP saisie par l'utilisateur
ping -c 1 $IP &> /dev/null					# Lance une requête ping sur l'IP, sans l'afficher à l'écran 
if [ "$?" = 0 ]							# Si le code de la précédente commande s'est bien passée (=0), alors
then
	echo "Host found"
else
	echo "Host not found, please retry !"
fi
# Script permettant de vérifier la disponibilité d'un hôte

PS3='Select the Nmap scan to run: [1-4] '
options=("Default Nmap Scan" "Nmap CVE Finder" "Quit")
select opt in "${options[@]}"
do
    case $opt in
        "Default Nmap Scan")
            echo "Running the default Nmap Scan..."
            nmap $IP -sC -sV -Pn -oN ./results
            break
            ;;
        "Nmap CVE Finder")
            echo "Nmap CVE Finder..."
            nmap -sV --script nmap-vulners/vulners.nse,vulscan/vulscan.nse --script-args vulscandb=scipvuldb.csv $IP
            break

            ;;
        "Quit")
            break
            ;;
        *) echo "invalid option $REPLY";;
    esac
done

input="cat /home/kali/Desktop/Centralized-pentest-main/Pentest-script/results"
while read line
 do
        if [[ $line == *open* ]] && [[ $line == *http* ]]
        then
                echo "Running Dirb..."
                dirb http://$IP /usr/share/wordlists/dirb/big.txt -o temp1

        echo "Running WhatWeb..."
        
        fi
done < results

if [ -e temp1 ]
then
        printf "\n----- DIRS -----\n\n" >> results
        cat temp1 >> results
        rm temp1
fi

if [ -e temp2 ]
then
    printf "\n----- WEB -----\n\n" >> results
        cat temp2 >> results
        rm temp2
fi
