#!/bin/bash
echo "Saisir une IP : "        
read IP								# Récupérer la variable IP saisie par l'utilisateur
ping -c 1 $IP &> /dev/null	
if [ "$?" = 0 ] ; then 						# Si le code de la précédente commande s'est bien passée (=0), alors then
	echo "Host found"
else
	echo "Host not found, please retry !"
    exit
fi

# Script permettant de vérifier la disponibilité d'un hôte

PS3='Select the Nmap scan to run: [1-3] '
options=("Default Nmap Scan" "Nmap CVE Finder" "Quit")
select opt in "${options[@]}"
do
    case $opt in
        "Default Nmap Scan")
            echo "Running the default Nmap Scan..."
            nmap $IP -sC -sV -Pn -oN ./results.txt
            break
            ;;
        "Nmap CVE Finder")
            echo "Nmap CVE Finder..."
            nmap -sV --script nmap-vulners/vulners.nse,vulscan/vulscan.nse --script-args vulscandb=scipvuldb.csv $IP
            break
            ;;
        "Quit")
            break
            ;;
        *) echo "invalid option $REPLY";;
    esac
done

input="./results.txt"
while IFS= read -r line; 
do
        if [[ $line == *open* ]] && [[ $line == *http* ]]; then
                echo "Running Gobuster..."                
                echo "---------- GOBUSTER ----------" >> $input
                gobuster dir -u $IP -w /usr/share/wordlists/dirb/common.txt -qz >> $input

                echo "Running WhatWeb..."
                echo "---------- WHATWEB ----------" >> $input
                whatweb -v -a 3 $IP >> $input             # -v pour l'output de la commande, -a pour agression level
        fi
done < ./results.txt
skipfish -o ./temp2 http://$IP

